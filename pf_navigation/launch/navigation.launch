<launch>
  <arg name="map" default="nothing"/>
  <arg name="localization_type" default="AMCL"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <rosparam file="$(find pf_navigation)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find pf_navigation)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
    
    <rosparam file="$(find pf_navigation)/params/map_nav_params/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find pf_navigation)/params/map_nav_params/global_costmap_params.yaml" command="load" />
    
    <rosparam file="$(find pf_navigation)/params/base_local_planner_params.yaml" command="load" />
    <rosparam file="$(find pf_navigation)/params/move_base_params.yaml" command="load" />
    
    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>
    
    <remap from="odom" to="odometry/filtered" />
  </node>
 
 <!--node pkg="tf" type="static_transform_publisher" name="static_odom_broadcaster"
        args="0 0 0 0 0 0 map odom 100"/>     
 <node name="odom_publisher" pkg="sp1s" type="odom_publisher" /-->
 
 
 <!--node if="$(eval map == 'nothing')" name="map_server" pkg="map_server" type="map_server" args="$(find pf_navigation)/maps/map_empty.yaml"/ -->
 
 <node name="map_node" pkg="map_server" type="map_server" args="$(find pf_navigation)/maps/olha_storage.yaml" respawn="false">
    <param name="frame_id" value="map" />
 </node>
 
     <node if="$(eval localization_type == 'FIXED_ODOM')" pkg="tf" type="static_transform_publisher" name="static_odom_broadcaster"
        args="0 0 0 0 0 0 map odom 100">
          <!--remap from="scan" to="/m2wr/laser/scan"/-->
  </node>	
 
 <!--- Run AMCL --> 
    <node if="$(eval localization_type == 'AMCL')" pkg="amcl" type="amcl" name="amcl" output="screen">
        <!-- Publish scans from best pose at a max of 30 Hz -->

<param name="odom_model_type" value="diff"/>
    <param name="odom_alpha5" value="0.1"/>
    <param name="gui_publish_rate" value="10.0"/>
    <param name="laser_max_beams" value="720"/>
    <param name="laser_min_range" value="0.1"/>
    <param name="laser_max_range" value="30.0"/>
    <param name="min_particles" value="500"/>
    <param name="max_particles" value="2000"/>
    <!-- Maximum error between the true distribution and the estimated distribution. -->
    <param name="kld_err" value="0.05"/>
    <param name="kld_z" value="0.99"/>
    <param name="odom_alpha1" value="0.2"/>
    <param name="odom_alpha2" value="0.2"/>
    <!-- translation std dev, m -->
    <param name="odom_alpha3" value="0.2"/>
    <param name="odom_alpha4" value="0.2"/>
    <param name="laser_z_hit" value="0.5"/>
    <param name="laser_z_short" value="0.05"/>
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.5"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_model_type" value="likelihood_field"/>
    <!-- Maximum distance to do obstacle inflation on map, for use in likelihood_field model. -->
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <!-- Translational movement required before performing a filter update.  -->
    <param name="update_min_d" value="0.1"/>
    <!--Rotational movement required before performing a filter update. -->
    <param name="update_min_a" value="0.314"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="base_frame_id" value="base_link"/>
    <param name="global_frame_id" value="map"/>
    <!-- Number of filter updates required before resampling. -->
    <param name="resample_interval" value="1"/>
    <!-- Increase tolerance because the computer can get quite busy -->
    <param name="transform_tolerance" value="1.0"/>
    <!-- Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001. -->
    <param name="recovery_alpha_slow" value="0.0"/>
    <!--Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1. -->
    <param name="recovery_alpha_fast" value="0.1"/>
    <!-- Initial pose mean -->
    <param name="initial_pose_x" value="0.0" />
    <param name="initial_pose_y" value="0.0" />
    <param name="initial_pose_a" value="0.0" />
    <!-- When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map.-->
    <param name="receive_map_topic" value="true"/>
    <!--  When set to true, AMCL will only use the first map it subscribes to, rather than updating each time a new one is received. -->
    <param name="first_map_only" value="false"/>

		
        <param name="use_map_topic" value="true"/>
        <param name="base_frame_id" value="base_link"/>
        <remap from="scan" to="/m2wr/laser/scan"/>
        
    </node>
 
      <!-- gmapping -->
    <node if="$(eval localization_type == 'GMAPPING')" pkg="gmapping" type="slam_gmapping" name="gmapping" output="screen">                
        <param name="base_frame" value="base_link"/>
        <param name="maxRange" value="500"/>
        <param name="odom_frame" value="odom_combined"/>
       	<remap from="scan" to="/m2wr/laser/scan"/>
        <!--remap from="scan" to="/mark1/laser/scan"/-->        
    </node>
    
   <node name="rviz" pkg="rviz" type="rviz"  args="-d $(find pf_navigation)/rviz/robot.rviz"> 
   </node>  
</launch>
